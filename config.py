from os import getenv
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums.parse_mode import ParseMode
from aiogram.types import BotCommand, BotCommandScopeDefault
from aiogram.fsm.storage.redis import RedisStorage
import redis.asyncio as redis
import db.models
from db.storage import DatabaseManager


load_dotenv()
TOKEN = getenv("TOKEN")
database_url = getenv("DATABASE_URL")
database_manager = DatabaseManager(database_url=database_url)
async_redis_client = redis.Redis(host=getenv('HOST_REDIS'),
                                 port=int(getenv('PORT_REDIS')),
                                 decode_responses=True,
                                 username=getenv('USERNAME_REDIS'),
                                 password=getenv('PASSWORD_REDIS'))
redis_storage = RedisStorage(redis=async_redis_client)

bot = Bot(token=TOKEN,
          default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher(storage=redis_storage)


async def set_commands():
    commands_list = [
        BotCommand(command='start', description='üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞'),
        BotCommand(command='laws', description='‚öñÔ∏è –ü–æ–º–æ—â—å —é—Ä–∏—Å—Ç–∞'),
        BotCommand(command='social', description='ü§ù –°–æ—Ü–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ª—å–≥–æ—Ç—ã'),
        BotCommand(command='edu', description='üìö –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'),
        BotCommand(command='health', description='ü©∫ –ó–¥–æ—Ä–æ–≤—å–µ'),
        BotCommand(command='work', description='üíº –†–∞–±–æ—Ç–∞'),
        BotCommand(command='money', description='üí∞ –î–µ–Ω—å–≥–∏'),
        BotCommand(command='room', description='üè¢ –ñ–∏–∑–Ω—å –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏'),
        BotCommand(command='flat', description='üè† –ñ–∏–∑–Ω—å –≤ —Å–≤–æ–µ–π –∫–≤–∞—Ä—Ç–∏—Ä–µ'),
        BotCommand(command='psy', description='‚ù§Ô∏è –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'),
        BotCommand(command='food', description='ü•£ –ï–¥–∞: —á—Ç–æ –ø–æ–∫—É–ø–∞—Ç—å –∏ –∫–∞–∫ –≥–æ—Ç–æ–≤–∏—Ç—å'),
        BotCommand(command='future', description='üåü –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—É–¥—É—â–µ–≥–æ')
        ]
    await bot.set_my_commands(commands_list, BotCommandScopeDefault())
